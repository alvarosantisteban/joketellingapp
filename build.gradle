apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'

        // Plugin to provide a "dependencyUpdates" task to determine which dependencies have updates
        // More info: https://github.com/ben-manes/gradle-versions-plugin
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}

// Avoid displaying betas, alphas, etc. for the "dependencyUpdates" task
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'alpha-preview', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}


// Following solution for configuring the test task has been based on what I read in Udacity's forum and resources

task startLocalBackend (dependsOn: ":jokesbackend:appengineRun") {
    project(":jokesbackend").afterEvaluate { jokesbackend ->
        jokesbackend.extensions.appengine.daemon = true
    }
    doLast {
        println "Start the local backend server"
    }
}

task shutDownLocalBackend (dependsOn: ":jokesbackend:appengineStop") {
    mustRunAfter startLocalBackend
    doLast {
        println "Shut down the local backend server"
    }
}

task testApp (dependsOn: ":app:connectedAndroidTest") {
    mustRunAfter startLocalBackend
    finalizedBy shutDownLocalBackend
    doLast {
        println "Test the app"
    }
}

task runTests() {
    dependsOn = ["startLocalBackend", "testApp", "shutDownLocalBackend"]
    doLast {
        println "runTests task completed"
    }
}